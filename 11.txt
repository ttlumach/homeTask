// 1/5
print("1-----------------1")

func forClosure( with closure: ()->() ){
    for i in 0...10{
        print(i, terminator: "")
    }
    closure()
}

forClosure{print("\nsomeText")}

// 2/5
print("2-----------------2")

var numbers = [1,90,5,1,2,4,6,2,4,23,54,1,23,4,1,2,46,7,10]

print(numbers.sorted{$0 < $1})

// 3/5
print("3-----------------3")

func sortWithClosure(_ numbers: [Int], closure: (_ a: Int,_ b: Int?)->(Bool) ) -> Int {
    var opt: Int?
    for el in numbers{
        if closure(el, opt){
            opt = el
        }
    }
    if opt != nil{
        return opt!
    } else {
        print("Array is empty!!!")
        return 0
    }
}

numbers = [1,90,5,1,2,4,6,2,4,23,110,54,1,23,4,1,2,46,7,10]

let max = sortWithClosure(numbers){$1 == nil || $0 > $1!}
print(max)

let min = sortWithClosure(numbers){$1 == nil || $0 < $1!}
print(min)

// 4/5
print("4-----------------4")

func sortStringWithClosure(_ str: String, closure: (_ a: Character,_ b: Character?)->(Bool) ) -> String {
    var opt: Character?
    for el in str{
        if closure(el, opt){
            opt = el
        }
    }
    if opt != nil{
        return String(opt!)
    } else {
        return "String is empty"
    }
}

let smin = sortStringWithClosure("somethinga"){(el,min) in
    if min == nil{
        return true
    } else {
        if el < min!{
            return true
        }
    }
    return false
}

print(smin)

let smax = sortStringWithClosure("somethinga"){(el,max) in
    if max == nil{
        return true
    } else {
        if el > max!{
            return true
        }
    }
    return false
}

print(smax)

// 5/5
print("5-----------------5")

let someString = "qwea,VDHY!V,Q635,21HDW!dwd!ashdvfvitvaYURCWBJABYBU&^#$!YR*(!##8346923.,"
var array = [String]()
for char in someString{
    array.append(String(char))
}

func priority(_ char: String) -> Int{
    switch char.lowercased(){
        case "a","o","i","e","u": return 1
        case "a"..."z": return 2
        case "1"..."9": return 3
        default: return 4
    }
}

print(array.sorted{
    switch( priority($0), priority($1) ){
        case let (x,y) where x < y: return true
        case let (x,y) where x > y: return false
        default: return Character($0).lowercased() <= Character($1).lowercased()
    }
})






